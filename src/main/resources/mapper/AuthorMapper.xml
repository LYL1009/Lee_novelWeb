<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lee.mapper.AuthorMapper">
    <resultMap id="BaseResultMap" type="com.lee.entity.Author">
        <constructor>
            <idArg column="author_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="author_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        </constructor>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    author_id, author_name, user_id
  </sql>
    <!-- Author selectAuthorByUserId(Integer userId); -->
    <select id="selectAuthorByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT * FROM author WHERE user_id=#{userId}
    </select>
    <select id="selectByExample" parameterType="com.lee.entity.AuthorExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from author
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from author
        where author_id = #{authorId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from author
    where author_id = #{authorId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.lee.entity.AuthorExample">
        delete from author
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.lee.entity.Author">
    insert into author (author_id, author_name, user_id
      )
    values (#{authorId,jdbcType=INTEGER}, #{authorName,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.lee.entity.Author">
        insert into author
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="authorId != null">
                author_id,
            </if>
            <if test="authorName != null">
                author_name,
            </if>
            <if test="userId != null">
                user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="authorId != null">
                #{authorId,jdbcType=INTEGER},
            </if>
            <if test="authorName != null">
                #{authorName,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.lee.entity.AuthorExample" resultType="java.lang.Long">
        select count(*) from author
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update author
        <set>
            <if test="record.authorId != null">
                author_id = #{record.authorId,jdbcType=INTEGER},
            </if>
            <if test="record.authorName != null">
                author_name = #{record.authorName,jdbcType=VARCHAR},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update author
        set author_id = #{record.authorId,jdbcType=INTEGER},
        author_name = #{record.authorName,jdbcType=VARCHAR},
        user_id = #{record.userId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.lee.entity.Author">
        update author
        <set>
            <if test="authorName != null">
                author_name = #{authorName,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
        </set>
        where author_id = #{authorId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lee.entity.Author">
    update author
    set author_name = #{authorName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER}
    where author_id = #{authorId,jdbcType=INTEGER}
  </update>
</mapper>